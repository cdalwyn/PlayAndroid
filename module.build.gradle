apply from: "config.gradle"
ext {
    alternatePlugin = { it ? 'com.android.application' : 'com.android.library' }
    androidClosure = { android, isApp, appId ->
        android.with {
            compileSdkVersion rootProject.ext.android.compileSdkVersion
            defaultConfig {
                minSdkVersion rootProject.ext.android.minSdkVersion
                targetSdkVersion rootProject.ext.android.targetSdkVersion
                if (isApp) {
                    applicationId appId
                    versionCode rootProject.ext.android.versionCode
                    versionName rootProject.ext.android.versionName
                    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
                }
                //阿里路由框架配置
                javaCompileOptions {
                    annotationProcessorOptions {
                        arguments = [AROUTER_MODULE_NAME: appId]
                    }
                }
            }
            kotlinOptions {
                jvmTarget = "1.8"
            }
            compileOptions {
                sourceCompatibility JavaVersion.VERSION_1_8
                targetCompatibility JavaVersion.VERSION_1_8
            }
            sourceSets {
                main {
                    jniLibs.srcDirs = ['libs']
                    if (isApp) {
                        //独立运行
                        manifest.srcFile 'src/main/alone/AndroidManifest.xml'
                    } else {
                        //合并到宿主
                        manifest.srcFile 'src/main/AndroidManifest.xml'
                        resources {
                            //正式版本时，排除alone文件夹下所有调试文件
                            exclude 'src/main/alone/*'
                        }
                    }
                }
            }
//            if (isApp) {
//                flavorDimensions.add("module")
//                productFlavors {
//                    app {
//                        dimension "module"
//                    }
//                }
//            }
            buildTypes {
                debug {
                    minifyEnabled false
                    proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                }
                release {
                    minifyEnabled false
                    proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                }
            }
            buildFeatures {
                dataBinding true
            }
        }
    }
}
