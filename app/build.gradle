def isApp = true
apply plugin: alternatePlugin(isApp)
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
//apply plugin: 'com.didi.dokit'

android {
    androidClosure(it, isApp, rootProject.ext.android.applicationId)
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    android.applicationVariants.all {
        variant ->
            variant.outputs.all {
                output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        if (variant.buildType.name == 'release') {
                            outputFileName = "wanandroid${nowTime()}_release_V${variant.versionName}.apk"
                        } else if (variant.buildType.name == 'debug') {
                            outputFileName = "wanandroid${nowTime()}_debug_V${variant.versionName}.apk"
                        }
                    }
            }
    }
//    dokitExt {
//        //通用设置
//        comm {
//            //地图经纬度开关
//            gpsSwitch true
//            //网络开关
//            networkSwitch true
//            //大图开关
//            bigImgSwitch true
//            //webView js 抓包
//            webViewSwitch true
//        }
//    }
}

dependencies {
    implementation project(path: ':lib_base')
    if (!rootProject.ext.state.loginToApp) {
        implementation project(path: ':module_login')
    }
    if (!rootProject.ext.state.mainToApp) {
        implementation project(path: ':module_main')
    }
    if (!rootProject.ext.state.userToApp) {
        implementation project(path: ':module_user')
    }
    if (!rootProject.ext.state.searchToApp) {
        implementation project(path: ':module_search')
    }
    if (!rootProject.ext.state.squareToApp) {
        implementation project(path: ':module_square')
    }
    if (!rootProject.ext.state.projectToApp) {
        implementation project(path: ':module_project')
    }
    if (!rootProject.ext.state.webToApp) {
        implementation project(path: ':module_web')
    }
}

static def nowTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}